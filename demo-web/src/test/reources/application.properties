server.port=8072
spring.application.name=demo-web
#spring.servlet.context-path=/demo-web

##Eureka地址
#eureka.client.service-url.defaultZone=http://localhost:8071/eureka/
#eureka.instance.prefer-ip-address=true
#
##ribbon策略
#feign-client.ribbon.NFLoadBalancerRuleClassName=com.netflix.loadbalancer.RandomRule
#
##feign启用hystrix
#feign.hystrix.enabled=true


###Eureka Client configuration for Sample Eureka Service


##Properties based configuration for eureka client. The properties specified here is mostly what the users
##need to change. All of these can be specified as a java system property with -D option (eg)-Deureka.region=us-east-1
##For additional tuning options refer <url to go here>
#
##部署应用程序的区域
## - 对于AWS指定一个AWS区域
##  - 对于其他数据中心，指定一个指示该区域的任意字符串。
## 这里主要指定美国东部D
#eureka.region=default
#
##服务指定应用名，这里指的是eureka服务本身（相当于boot中的app.name）
#eureka.name=eureka-server
#
##客户识别此服务的虚拟主机名，这里指的是eureka服务本身（相当于boot中的serviceId）
##eureka.vipAddress=o2o
#
##服务将被识别并将提供请求的端口（web服务部署的tomcat端口）
#eureka.port=8071
#
#
##设置为false，因为该配置适用于eureka服务器本身的eureka客户端。
##在eureka服务器中运行的eureka客户端需要连接到其他区域中的服务器。
##对于其他应用程序，不应设置（默认为true），以实现更好的基于区域的负载平衡。
#eureka.preferSameZone=true
#
##如果要使用基于DNS的查找来确定其他eureka服务器（请参见下面的示例），请更改此选项
#eureka.shouldUseDns=false
#eureka.us-east-1.availabilityZones=default
##由于shouldUseDns为false，因此我们使用以下属性来明确指定到eureka服务器的路由（eureka Server地址）
#eureka.serviceUrl.default=http://localhost:8071/eureka/